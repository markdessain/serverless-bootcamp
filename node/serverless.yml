service: workshop-node

provider:
  name: aws
  runtime: nodejs8.10
  profile: serverless_personal
  region: eu-west-1
  stage: dev

  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:scan
      Resource:
        Fn::GetAtt:
          - restaurantsTable
          - Arn
    - Effect: Allow
      Action: execute-api:Invoke
      Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/*/GET/restaurants

plugins:
  - serverless-offline
  - serverless-pseudo-parameters

functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
          path: /
          method: get
    environment:
      restaurants_api:
        Fn::Join:
          - ''
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api.eu-west-1.amazonaws.com/dev/restaurants"
      cognito_user_pool_id: ${ssm:/workshop-node/dev/cognito_user_pool_id}
      cognito_client_id: ${ssm:/{service-name}/dev/cognito_web_client_id}

  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants/
          method: get
          authorizer: aws_iam
    environment:
      restaurants_table: ${ssm:/workshop-node/dev/table_name}
  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/${ssm:/workshop-node/dev/cognito_user_pool_id}
    environment:
      restaurants_table: ${ssm:/workshop-node/dev/table_name}

resources:
  Resources:
    restaurantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${ssm:/workshop-node/dev/table_name}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CognitoUserPoolMyUserPool:
      Type: AWS::Cognito::UserPool
